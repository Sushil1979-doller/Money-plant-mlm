// -----------------------------
// Global Variables & Data
// -----------------------------
let web3;
let userAccount;
let currentSponsor = "0x80e4CbEffc6D76E516FFe60392C39Af42132602A";

let isActivated = false;
let isPartner = false;
let partnerExists = false;
let partnerAddressStored = "";
let partnerReferralCount = 0;
let partnerReferralDate = null;

let currentLanguage = 'en';

const englishWelcomeText = `
  Welcome to <b>Money Plant MLM System</b>. This is your own money plant, it's a fully decentralized system where the owner is renounced and only users are the owner.<br /><br />
  <b>Here you can grow your money securely and get financial freedom!</b><br /><br />
  This system works on a <b>smart contract</b> that automatically distributes rewards among participants in a fair and transparent way. Once you register, you will start earning commissions from direct and indirect referrals.<br /><br />
  ЁЯМЯ <b>100% Safe & Secure</b> тАУ No Admin Control, Fully Decentralized.<br />
  ЁЯМЯ <b>Instant Payments</b> тАУ No Waiting, Get Paid Instantly.<br />
  ЁЯМЯ <b>Unlimited Earnings</b> тАУ Grow Your Network, Increase Your Income.<br /><br />
  <b>Transparency:</b> Funds are distributed directly user-to-user without any mediator. Money Plant is a liability-free project and will remain forever with you all.
`;

const hindiWelcomeText = `
  <b>рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдордПрд▓рдПрдо</b> рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдпрд╣ рдПрдХ рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрдд рдкреНрд░рдгрд╛рд▓реА рд╣реИ рдЬрд╣рд╛рдВ рдорд╛рд▓рд┐рдХ рдХрд╛ рдХреЛрдИ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИ рдФрд░ рд╕рд┐рд░реНрдл рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рд╣реА рдорд╛рд▓рд┐рдХ рд╣реИрдВред<br /><br />
  <b>рдпрд╣рд╛рдВ рдЖрдк рдЕрдкрдиреЗ рдкреИрд╕реЗ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдмрдврд╝рд╛ рд╕рдХрддреЗ рд╣реИрдВ рдФрд░ рд╡рд┐рддреНрддреАрдп рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!</b><br /><br />
  рдпрд╣ рдкреНрд░рдгрд╛рд▓реА рдПрдХ <b>рд╕реНрдорд╛рд░реНрдЯ рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ</b> рдкрд░ рдХрд╛рдо рдХрд░рддреА рд╣реИ рдЬреЛ рдкрд╛рд░рджрд░реНрд╢реА рддрд░реАрдХреЗ рд╕реЗ рд╕реАрдзреЗ рдпреВрдЬрд░ рд╕реЗ рдпреВрдЬрд░ рднреБрдЧрддрд╛рди рдХрд░рддреА рд╣реИред рдПрдХ рдмрд╛рд░ рдкрдВрдЬреАрдХрд░рдг рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж, рдЖрдк рд╕реАрдзреЗ рдФрд░ рдЕрдкреНрд░рддреНрдпрдХреНрд╖ рд░реЗрдлрд░рд▓ рд╕реЗ рдХрдореАрд╢рди рдХрдорд╛рдирд╛ рд╢реБрд░реВ рдХрд░ рджреЗрдВрдЧреЗред<br /><br />
  ЁЯМЯ <b>100% рд╕реБрд░рдХреНрд╖рд┐рдд</b> тАУ рдХреЛрдИ рдПрдбрдорд┐рди рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ, рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрддред<br />
  ЁЯМЯ <b>рддреБрд░рдВрдд рднреБрдЧрддрд╛рди</b> тАУ рдкреНрд░рддреАрдХреНрд╖рд╛ рдирд╣реАрдВ, рддреБрд░рдВрдд рдкреИрд╕рд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред<br />
  ЁЯМЯ <b>рдЕрд╕реАрдорд┐рдд рдХрдорд╛рдИ</b> тАУ рдЕрдкрдирд╛ рдиреЗрдЯрд╡рд░реНрдХ рдмрдврд╝рд╛рдПрдВ, рдЖрдп рдмрдврд╝рд╛рдПрдВред<br /><br />
  <b>рдкрд╛рд░рджрд░реНрд╢рд┐рддрд╛:</b> рдлрдВрдб рдмрд┐рдирд╛ рдХрд┐рд╕реА рдмрд┐рдЪреМрд▓рд┐рдП рдХреЗ рд╕реАрдзреЗ рдпреВрдЬрд░-рдЯреВ-рдпреВрдЬрд░ рд╡рд┐рддрд░рд┐рдд рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдХ рджрд╛рдпрд┐рддреНрд╡-рдореБрдХреНрдд рдкрд░рд┐рдпреЛрдЬрдирд╛ рд╣реИ рдФрд░ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреЗ рд╕рд╛рде рд░рд╣реЗрдЧреАред
`;

const faqData = [
  /* рдЖрдкрдХреА 25 FAQ рдЖрдЗрдЯрдореНрд╕ рд╡реИрд╕реЗ рд╣реА рд░рдЦреЗрдВ */
];

// -----------------------------
// Core Functions (Global)
// -----------------------------
async function connectWallet() {
  if (!window.ethereum) {
    alert("Install MetaMask!");
    return;
  }
  try {
    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
    userAccount = accounts[0];
    document.getElementById('connectWalletBtn').textContent = `Connected: ${userAccount.substring(0, 6)}...${userAccount.slice(-4)}`;
    document.getElementById('connectWalletBtn').classList.replace('disconnected', 'connected');

    document.getElementById('yourWallet').value = userAccount;
    document.getElementById('newAddress').value = userAccount;
    document.getElementById('sponsorLink').value = userAccount;
    if (document.getElementById('directSponsor')) {
      document.getElementById('directSponsor').value = currentSponsor;
    }
  } catch (err) {
    alert("Approve in MetaMask!");
  }
}

function toggleLanguage() {
  if (currentLanguage === 'en') {
    currentLanguage = 'hi';
    document.getElementById('welcomeText').innerHTML = hindiWelcomeText;
    document.getElementById('languageBtn').textContent = 'рд╣рд┐рдВрджреА / English';
  } else {
    currentLanguage = 'en';
    document.getElementById('welcomeText').innerHTML = englishWelcomeText;
    document.getElementById('languageBtn').textContent = 'English / рд╣рд┐рдВрджреА';
  }
  renderFAQ();
}

function renderFAQ() {
  const container = document.getElementById('faq-items');
  container.innerHTML = '';
  faqData.forEach(item => {
    const lang = currentLanguage === 'en' ? item.en : item.hi;
    const details = document.createElement('details');
    const summary = document.createElement('summary');
    summary.textContent = lang.question;
    const p = document.createElement('p');
    p.textContent = lang.answer;
    details.append(summary, p);
    container.append(details);
  });
}

// Modal Management
function openModal(id) {
  document.body.classList.add('modal-open');
  document.getElementById(id).style.display = 'block';
  if (id === 'activateModal') loadUplines();
  if (id === 'teamModal') loadTeamLevels();
}

function closeModal() {
  document.body.classList.remove('modal-open');
  document.querySelectorAll('.modal').forEach(m => m.style.display = 'none');
}

function loadUplines() {
  const list = document.getElementById('uplineList');
  list.innerHTML = '';
  for (let i = 15; i >= 1; i--) {
    list.innerHTML += `
      <div class="beneficiary-item">
        <span>ЁЯда Upline ${i}</span>
        <input type="text" placeholder="Address pending..." readonly />
        <span class="amount">1 USDT</span>
      </div>`;
  }
}

function loadTeamLevels() {
  const levels = document.querySelector('.team-levels');
  let total = 0;
  levels.innerHTML = '';
  for (let i = 1; i <= 16; i++) {
    const members = Math.floor(Math.random() * 5);
    total += members;
    levels.innerHTML += `
      <div class="level">
        <span>Level ${i}:</span><span>${members} Members</span>
      </div>`;
  }
  document.getElementById('totalMembers').textContent = total;
}

// Activation & Referral
function distributeFunds() {
  document.querySelector('.distribute-btn').style.display = 'none';
  const c = document.querySelector('.referral-actions-container');
  c.innerHTML = `
    <div class="congrats-msg">
      <h3>ЁЯОЙ Activation Successful!</h3>
      <div class="referral-actions">
        <button class="copy-btn" onclick="copyReferral()">Copy Referral Link</button>
        <button class="telegram-btn" onclick="window.open('https://t.me/+CeJkEHpoTWthZDVl')">Join Telegram</button>
      </div>
    </div>`;
  isActivated = true;
}

function copyReferral() {
  navigator.clipboard.writeText(`https://moneyplant.com/ref?user=${userAccount}`);
  alert('Link Copied!');
}

// Replace & Quit
function replaceUser() {
  if (isPartner) {
    alert("Partner cannot use Replace Me!");
    return;
  }
  const newAddr = document.getElementById('newAddress').value.trim();
  if (!newAddr) {
    alert("Enter New Wallet!");
    return;
  }
  currentSponsor = userAccount;
  userAccount = newAddr;
  document.getElementById('connectWalletBtn').textContent = `Connected: ${newAddr.slice(0, 6)}...${newAddr.slice(-4)}`;
  if (document.getElementById('directSponsor')) {
    document.getElementById('directSponsor').value = currentSponsor;
  }
  alert(`Replaced! New Link: https://moneyplant.com/ref?user=${newAddr}`);
  hideAllButtons();
  closeModal();
}

function handleQuit() {
  if (isPartner) {
    alert("Partner cannot use Quit Me!");
    return;
  }
  if (confirm('You will get up to 0.27 USDT daily. Confirm?')) {
    alert('Refunds start tomorrow at 4 AM IST.');
    hideAllButtons();
  }
}

function hideAllButtons() {
  document.querySelector('.button-container').style.display = 'none';
}

// Add / Remove Partner
function addPartner() {
  if (!isActivated) {
    alert("Activate first!");
    return;
  }
  if (isPartner) {
    alert("Already a Partner!");
    return;
  }
  if (partnerExists) {
    alert("Remove existing partner first.");
    return;
  }
  const addr = document.getElementById('partnerAddress').value.trim();
  if (!addr) {
    alert("Enter Partner Wallet Address!");
    return;
  }
  partnerExists = true;
  partnerAddressStored = addr;
  partnerReferralDate = new Date();
  partnerReferralCount = 0;
  alert(`Successful! Partner Added. Your Partner Referral Link: https://moneyplant.com/ref?partner=${addr} Note: As an activated user, you can remove and add a new Partner if needed.`);
  closeModal();
}

function removePartner() {
  if (!partnerExists) {
    alert("No Partner exists to remove!");
    return;
  }
  if (partnerReferralCount >= 2) {
    alert("This Partner has тЙе2 referrals in last 30 days. Cannot remove.");
    return;
  }
  if (confirm("Remove current Partner?")) {
    partnerExists = false;
    partnerAddressStored = "";
    partnerReferralCount = 0;
    partnerReferralDate = null;
    document.getElementById('partnerAddress').value = "";
    alert("Partner removed successfully.");
  }
}

// -----------------------------
// Hook Up Event Listeners
// -----------------------------
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('connectWalletBtn').addEventListener('click', connectWallet);
  document.getElementById('languageBtn').addEventListener('click', toggleLanguage);

  document.querySelectorAll('.btn-activate').forEach(b => b.addEventListener('click', () => openModal('activateModal')));
  document.querySelectorAll('.btn-team').forEach(b => b.addEventListener('click', () => openModal('teamModal')));
  document.querySelectorAll('.btn-replace').forEach(b => b.addEventListener('click', () => openModal('replaceModal')));
  document.querySelectorAll('.btn-quit').forEach(b => b.addEventListener('click', handleQuit));

  renderFAQ();
});
