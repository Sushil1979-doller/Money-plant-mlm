// Global Variables
let web3;
let userAccount;
let currentSponsor = "0x80e4CbEffc6D76E516FFe60392C39Af42132602A";

// Wallet Connection
async function connectWallet() {
  if (window.ethereum) {
    try {
      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
      userAccount = accounts[0];
      const connectBtn = document.getElementById('connectWalletBtn');
      connectBtn.textContent = `Connected: ${userAccount.substring(0,6)}...${userAccount.slice(-4)}`;
      connectBtn.classList.replace('disconnected', 'connected');
      if(document.getElementById('directSponsor')){
        document.getElementById('directSponsor').value = currentSponsor;
      }
    } catch (error) {
      alert("Approve in MetaMask!");
    }
  } else {
    alert("Install MetaMask!");
  }
}
document.getElementById('connectWalletBtn').addEventListener('click', connectWallet);

// Default language is English
let currentLanguage = 'en';

// Store welcome note texts
const englishWelcomeText = document.getElementById('welcomeText').innerHTML;
const hindiWelcomeText = `
  <b>рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдордПрд▓рдПрдо</b> рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдпрд╣ рдПрдХ рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрдд рдкреНрд░рдгрд╛рд▓реА рд╣реИ рдЬрд╣рд╛рдВ рдорд╛рд▓рд┐рдХ рдХрд╛ рдХреЛрдИ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИ рдФрд░ рд╕рд┐рд░реНрдл рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рд╣реА рдорд╛рд▓рд┐рдХ рд╣реИрдВред<br><br>
  <b>рдпрд╣рд╛рдВ рдЖрдк рдЕрдкрдиреЗ рдкреИрд╕реЗ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдмрдврд╝рд╛ рд╕рдХрддреЗ рд╣реИрдВ рдФрд░ рд╡рд┐рддреНрддреАрдп рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!</b><br><br>
  рдпрд╣ рдкреНрд░рдгрд╛рд▓реА рдПрдХ <b>рд╕реНрдорд╛рд░реНрдЯ рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ</b> рдкрд░ рдХрд╛рдо рдХрд░рддреА рд╣реИ рдЬреЛ рдкрд╛рд░рджрд░реНрд╢реА рддрд░реАрдХреЗ рд╕реЗ рд╕реАрдзреЗ рдпреВрдЬрд░ рд╕реЗ рдпреВрдЬрд░ рднреБрдЧрддрд╛рди рдХрд░рддреА рд╣реИред рдПрдХ рдмрд╛рд░ рдкрдВрдЬреАрдХрд░рдг рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж, рдЖрдк рд╕реАрдзреЗ рдФрд░ рдЕрдкреНрд░рддреНрдпрдХреНрд╖ рд░реЗрдлрд░рд▓ рд╕реЗ рдХрдореАрд╢рди рдХрдорд╛рдирд╛ рд╢реБрд░реВ рдХрд░ рджреЗрдВрдЧреЗред<br><br>
  ЁЯМЯ <b>100% рд╕реБрд░рдХреНрд╖рд┐рдд</b> - рдХреЛрдИ рдПрдбрдорд┐рди рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ, рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрддред<br>
  ЁЯМЯ <b>рддреБрд░рдВрдд рднреБрдЧрддрд╛рди</b> - рдкреНрд░рддреАрдХреНрд╖рд╛ рдирд╣реАрдВ, рддреБрд░рдВрдд рдкреИрд╕рд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред<br>
  ЁЯМЯ <b>рдЕрд╕реАрдорд┐рдд рдХрдорд╛рдИ</b> - рдЕрдкрдирд╛ рдиреЗрдЯрд╡рд░реНрдХ рдмрдврд╝рд╛рдПрдВ, рдЖрдп рдмрдврд╝рд╛рдПрдВред<br><br>
  <b>рдкрд╛рд░рджрд░реНрд╢рд┐рддрд╛:</b> рдлрдВрдб рдмрд┐рдирд╛ рдХрд┐рд╕реА рдмрд┐рдЪреМрд▓рд┐рдП рдХреЗ рд╕реАрдзреЗ рдпреВрдЬрд░-рдЯреВ-рдпреВрдЬрд░ рд╡рд┐рддрд░рд┐рдд рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдХ рджрд╛рдпрд┐рддреНрд╡-рдореБрдХреНрдд рдкрд░рд┐рдпреЛрдЬрдирд╛ рд╣реИ рдФрд░ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреЗ рд╕рд╛рде рд░рд╣реЗрдЧреАред
`;

// FAQ data (English + Hindi) - рдЬреИрд╕рд╛ рдкрд╣рд▓реЗ рд╕рдордЭрд╛рдпрд╛ рдЧрдпрд╛
const faqData = [
  // ... рдпрд╣рд╛рдБ рдкреВрд░рд╛ FAQ рдбреЗрдЯрд╛ (25 рдкреНрд░рд╢реНрди) рдЬреИрд╕рд╛ рдкрд╣рд▓реЗ рджрд┐рдпрд╛ рдЧрдпрд╛ рдерд╛ ...
  {
    en: {
      question: "1. What is Money Plant MLM System?",
      answer: "Money Plant is a fully decentralized MLM system based on donation and distribution..."
    },
    hi: {
      question: "1. Money Plant MLM System рдХреНрдпрд╛ рд╣реИ?",
      answer: "Money Plant рдПрдХ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрдд (Decentralized) MLM рд╕рд┐рд╕реНрдЯрдо рд╣реИ рдЬреЛ..."
    }
  },
  // рд╢реЗрд╖ рд╕рднреА FAQ Items...
];

// Render FAQ items based on currentLanguage
function renderFAQ() {
  const faqContainer = document.getElementById('faq-items');
  faqContainer.innerHTML = '';
  faqData.forEach(item => {
    const langData = currentLanguage === 'en' ? item.en : item.hi;
    const details = document.createElement('details');
    const summary = document.createElement('summary');
    summary.textContent = langData.question;
    const p = document.createElement('p');
    p.textContent = langData.answer;
    details.appendChild(summary);
    details.appendChild(p);
    faqContainer.appendChild(details);
  });
}

// Initial render in English
renderFAQ();

// Language Toggle
document.getElementById('languageBtn').addEventListener('click', () => {
  const isEnglish = document.getElementById('languageBtn').textContent.includes('English');
  if (isEnglish) {
    // Switch to Hindi
    currentLanguage = 'hi';
    document.getElementById('welcomeText').innerHTML = hindiWelcomeText;
    document.getElementById('languageBtn').textContent = 'рд╣рд┐рдВрджреА / English';
  } else {
    // Switch to English
    currentLanguage = 'en';
    document.getElementById('welcomeText').innerHTML = englishWelcomeText;
    document.getElementById('languageBtn').textContent = 'English / рд╣рд┐рдВрджреА';
  }
  renderFAQ();
});

// Modals
function openModal(modalId) {
  document.body.classList.add('modal-open');
  document.getElementById(modalId).style.display = 'block';
}
function closeModal() {
  document.body.classList.remove('modal-open');
  document.querySelectorAll('.modal').forEach(modal => modal.style.display = 'none');
}

// Load Uplines
function loadUplines() {
  const uplineList = document.getElementById('uplineList');
  for (let i = 15; i >= 1; i--) {
    uplineList.innerHTML += `
      <div class="beneficiary-item">
        <span>ЁЯда Upline ${i}</span>
        <input type="text" placeholder="Address pending..." readonly>
        <span class="amount">1 USDT</span>
      </div>
    `;
  }
}
loadUplines();

// Team View
function loadTeamLevels() {
  const teamLevels = document.querySelector('.team-levels');
  let total = 0;
  teamLevels.innerHTML = "";
  for (let i = 1; i <= 16; i++) {
    const members = Math.floor(Math.random() * 5);
    total += members;
    teamLevels.innerHTML += `
      <div class="level">
        <span>Level ${i}:</span>
        <span>${members} Members</span>
      </div>
    `;
  }
  document.getElementById('totalMembers').textContent = total;
}
loadTeamLevels();

// Distribute Funds
function distributeFunds() {
  document.querySelector('.distribute-btn').style.display = 'none';
  const referralLink = `https://moneyplant.com/ref?user=${userAccount}`;
  document.getElementById('activateModal').innerHTML += `
    <div class="congrats-msg">
      <h3>ЁЯОЙ Activation Successful!</h3>
      <div class="referral-actions">
        <button class="copy-btn" onclick="copyReferral()">Copy Referral Link</button>
        <button class="telegram-btn" onclick="window.open('https://t.me/+CeJkEHpoTWthZDVl')">Join Telegram</button>
      </div>
    </div>
  `;
}

// Copy Referral Link
function copyReferral() {
  navigator.clipboard.writeText(`https://moneyplant.com/ref?user=${userAccount}`);
  alert('Link Copied!');
}

// Replace Me
function openReplaceModal() {
  document.getElementById('sponsorLink').value = `https://moneyplant.com/ref?user=${currentSponsor}`;
  openModal('replaceModal');
}
function replaceUser() {
  const newAddress = document.getElementById('newAddress').value;
  if (newAddress) {
    currentSponsor = userAccount;
    userAccount = newAddress;
    document.getElementById('connectWalletBtn').textContent = `Connected: ${newAddress.slice(0,6)}...${newAddress.slice(-4)}`;
    if(document.getElementById('directSponsor')){
      document.getElementById('directSponsor').value = currentSponsor;
    }
    alert(`Replaced! New Link: https://moneyplant.com/ref?user=${newAddress}`);
    closeModal();
  } else {
    alert("Enter New Wallet!");
  }
}

// Quit Me
function handleQuit() {
  if (confirm('You will get 0.27 USDT daily. Confirm?')) {
    alert('Refunds start tomorrow at 4 AM IST.');
    const quitBtn = document.getElementById('quitBtn');
    if(quitBtn) quitBtn.style.display = 'none';
  }
}
