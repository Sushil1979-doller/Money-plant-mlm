// Global Variables
let web3;
let userAccount;
let currentSponsor = "0x80e4CbEffc6D76E516FFe60392C39Af42132602A";

// Wallet Connection
async function connectWallet() {
  if (window.ethereum) {
    try {
      const accounts = await window.ethereum.request({ method: "eth_requestAccounts" });
      userAccount = accounts[0];
      const connectBtn = document.getElementById("connectWalletBtn");
      connectBtn.textContent = `Connected: ${userAccount.substring(0,6)}...${userAccount.slice(-4)}`;
      connectBtn.classList.replace("disconnected", "connected");
      const dsElement = document.getElementById("directSponsor");
      if (dsElement) { dsElement.value = currentSponsor; }
    } catch (error) {
      alert("Approve in MetaMask!");
    }
  } else {
    alert("Install MetaMask!");
  }
}
document.getElementById("connectWalletBtn").addEventListener("click", connectWallet);

// Store original welcome text
const englishWelcomeText = document.getElementById("welcomeText").innerHTML;
const hindiWelcomeText = `
  <b>рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдордПрд▓рдПрдо</b> рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдпрд╣ рдПрдХ рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрдд рдкреНрд░рдгрд╛рд▓реА рд╣реИ рдЬрд╣рд╛рдБ рдорд╛рд▓рд┐рдХ рдХрд╛ рдХреЛрдИ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИ рдФрд░ рд╕рд┐рд░реНрдл рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рд╣реА рдорд╛рд▓рд┐рдХ рд╣реИрдВред<br><br>
  <b>рдпрд╣рд╛рдБ рдЖрдк рдЕрдкрдиреЗ рдкреИрд╕реЗ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдмрдврд╝рд╛ рд╕рдХрддреЗ рд╣реИрдВ рдФрд░ рд╡рд┐рддреНрддреАрдп рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!</b><br><br>
  рдпрд╣ рдкреНрд░рдгрд╛рд▓реА рдПрдХ <b>рд╕реНрдорд╛рд░реНрдЯ рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ</b> рдкрд░ рдХрд╛рдо рдХрд░рддреА рд╣реИ рдЬреЛ рдкрд╛рд░рджрд░реНрд╢реА рддрд░реАрдХреЗ рд╕реЗ рд╕реАрдзреЗ рдпреВрдЬрд░ рд╕реЗ рдпреВрдЬрд░ рднреБрдЧрддрд╛рди рдХрд░рддреА рд╣реИред рдПрдХ рдмрд╛рд░ рдкрдВрдЬреАрдХрд░рдг рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж, рдЖрдк рд╕реАрдзреЗ рдФрд░ рдЕрдкреНрд░рддреНрдпрдХреНрд╖ рд░реЗрдлрд░рд▓ рд╕реЗ рдХрдореАрд╢рди рдХрдорд╛рдирд╛ рд╢реБрд░реВ рдХрд░ рджреЗрдВрдЧреЗред<br><br>
  ЁЯМЯ <b>100% рд╕реБрд░рдХреНрд╖рд┐рдд</b> - рдХреЛрдИ рдПрдбрдорд┐рди рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ, рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрддред<br>
  ЁЯМЯ <b>рддреБрд░рдВрдд рднреБрдЧрддрд╛рди</b> - рдкреНрд░рддреАрдХреНрд╖рд╛ рдирд╣реАрдВ, рддреБрд░рдВрдд рдкреИрд╕рд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред<br>
  ЁЯМЯ <b>рдЕрд╕реАрдорд┐рдд рдХрдорд╛рдИ</b> - рдЕрдкрдирд╛ рдиреЗрдЯрд╡рд░реНрдХ рдмрдврд╝рд╛рдПрдВ, рдЖрдп рдмрдврд╝рд╛рдПрдВред<br><br>
  <b>рдкрд╛рд░рджрд░реНрд╢рд┐рддрд╛:</b> рдлрдВрдб рдмрд┐рдирд╛ рдХрд┐рд╕реА рдмрд┐рдЪреМрд▓рд┐рдП рдХреЗ рд╕реАрдзреЗ рдпреВрдЬрд░-рдЯреВ-рдпреВрдЬрд░ рд╡рд┐рддрд░рд┐рдд рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдХ рджрд╛рдпрд┐рддреНрд╡-рдореБрдХреНрдд рдкрд░рд┐рдпреЛрдЬрдирд╛ рд╣реИ рдФрд░ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреЗ рд╕рд╛рде рд░рд╣реЗрдЧреАред
`;

// Function to load FAQ content from external file based on language
function loadFAQ(language) {
  const faqContainer = document.getElementById("faqContainer");
  const faqFile = language === "en" ? "faq-en.html" : "faq-hi.html";
  fetch(faqFile)
    .then(response => response.text())
    .then(html => {
      faqContainer.innerHTML = html;
      attachFAQToggle();
    })
    .catch(error => {
      console.error("Error loading FAQ:", error);
      faqContainer.innerHTML = "<p>Error loading FAQ.</p>";
    });
}

// Attach toggle functionality for FAQ items
function attachFAQToggle() {
  document.querySelectorAll(".faq-question").forEach(function (item) {
    item.addEventListener("click", function () {
      const answer = this.nextElementSibling;
      answer.style.display = answer.style.display === "block" ? "none" : "block";
    });
  });
}

// Set default language to English and load FAQ
let currentLanguage = "en";
loadFAQ(currentLanguage);

// Language Toggle Functionality
document.getElementById("languageBtn").addEventListener("click", function () {
  currentLanguage = currentLanguage === "en" ? "hi" : "en";
  document.getElementById("welcomeText").innerHTML = currentLanguage === "en" ? englishWelcomeText : hindiWelcomeText;
  document.getElementById("languageBtn").textContent = currentLanguage === "en" ? "English / рд╣рд┐рдВрджреА" : "рд╣рд┐рдВрджреА / English";
  loadFAQ(currentLanguage);
});

// Dummy implementations for modals and other functions

function openModal(modalId) {
  document.body.classList.add("modal-open");
  document.getElementById(modalId).style.display = "flex"; // Using flex to center modal content
}

function closeModal() {
  document.body.classList.remove("modal-open");
  document.querySelectorAll(".modal").forEach(modal => modal.style.display = "none");
}

function loadUplines() {
  const uplineList = document.getElementById("uplineList");
  for (let i = 15; i >= 1; i--) {
    uplineList.innerHTML += `
      <div class="beneficiary-item">
        <span>ЁЯда Upline ${i}</span>
        <input type="text" placeholder="Address pending..." readonly>
        <span class="amount">1 USDT</span>
      </div>
    `;
  }
}
loadUplines();

function loadTeamLevels() {
  const teamLevels = document.querySelector(".team-levels");
  let total = 0;
  teamLevels.innerHTML = "";
  for (let i = 1; i <= 16; i++) {
    const members = Math.floor(Math.random() * 5);
    total += members;
    teamLevels.innerHTML += `
      <div class="level">
        <span>Level ${i}:</span>
        <span>${members} Members</span>
      </div>
    `;
  }
  document.getElementById("totalMembers").textContent = total;
}
loadTeamLevels();

function distributeFunds() {
  const btn = document.querySelector(".distribute-btn");
  if (btn) { btn.style.display = "none"; }
  alert("Funds distributed! Referral link and Telegram join button will now appear.");
  // рдпрд╣рд╛рдВ рдЖрдк referral link copy рдФрд░ Telegram join рдмрдЯрди рджрд┐рдЦрд╛рдиреЗ рдХрд╛ рдХреЛрдб рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВред
}

function copyReferral() {
  navigator.clipboard.writeText(`https://moneyplant.com/ref?user=${userAccount}`);
  alert("Referral link copied!");
}

function openReplaceModal() {
  document.getElementById("sponsorLink").value = `https://moneyplant.com/ref?user=${currentSponsor}`;
  openModal("replaceModal");
}

function replaceUser() {
  const newAddress = document.getElementById("newAddress").value;
  if (newAddress) {
    currentSponsor = userAccount;
    userAccount = newAddress;
    document.getElementById("connectWalletBtn").textContent = `Connected: ${newAddress.slice(0,6)}...${newAddress.slice(-4)}`;
    document.getElementById("directSponsor").value = currentSponsor;
    alert(`Replaced! New Link: https://moneyplant.com/ref?user=${newAddress}`);
    closeModal();
  } else {
    alert("Enter New Wallet!");
  }
}

function handleQuit() {
  if (confirm("You will get 0.27 USDT daily. Confirm?")) {
    alert("Refunds start tomorrow at 4 AM IST.");
    document.getElementById("quitBtn").style.display = "none";
  }
}

/* Video & PDF Upload Functions */
function uploadVideo() {
  const videoInput = document.getElementById("videoUpload");
  const videoDisplay = document.getElementById("videoDisplay");
  if (videoInput.files.length > 0) {
    // рдпрд╣рд╛рдБ рдЖрдк рдЕрдкрдирд╛ рд╡реАрдбрд┐рдпреЛ рдЕрдкрд▓реЛрдб рд▓реЙрдЬрд┐рдХ рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВред
    videoDisplay.innerHTML = `<p>Uploaded Video: ${videoInput.files[0].name}</p>`;
  } else {
    alert("Please select a video file.");
  }
}

function uploadPDF() {
  const pdfInput = document.getElementById("pdfUpload");
  const pdfDisplay = document.getElementById("pdfDisplay");
  if (pdfInput.files.length > 0) {
    // рдпрд╣рд╛рдБ рдЖрдк рдЕрдкрдирд╛ PDF рдЕрдкрд▓реЛрдб рд▓реЙрдЬрд┐рдХ рдЬреЛрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВред
    pdfDisplay.innerHTML = `<p>Uploaded PDF: ${pdfInput.files[0].name}</p>`;
  } else {
    alert("Please select a PDF file.");
  }
}
