// Global Variables
let web3;
let userAccount;
let currentSponsor = "0x80e4CbEffc6D76E516FFe60392C39Af42132602A";

// Activation and partner related flags
let isActivated = false;         // true once user has deposited 27 USDT (simulated activation)
let isPartner = false;           // true if current user is a partner (joined via someone else's referral)
let partnerExists = false;       // true if an activated user has already added a partner
let partnerAddressStored = "";   // to store the added partner's address
let partnerReferralCount = 0;    // Count of referrals generated by the partner
let partnerReferralDate = null;  // Timestamp to simulate the 30-day window condition

// Wallet Connection
async function connectWallet() {
  if (window.ethereum) {
    try {
      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
      userAccount = accounts[0];
      const connectBtn = document.getElementById('connectWalletBtn');
      connectBtn.textContent = `Connected: ${userAccount.substring(0,6)}...${userAccount.slice(-4)}`;
      connectBtn.classList.replace('disconnected', 'connected');
      // Pre-load connected address
      document.getElementById('yourWallet').value = userAccount;
      document.getElementById('newAddress').value = userAccount;
      document.getElementById('sponsorLink').value = userAccount;
      if(document.getElementById('directSponsor')){
         document.getElementById('directSponsor').value = currentSponsor;
      }
    } catch (error) {
      alert("Approve in MetaMask!");
    }
  } else {
    alert("Install MetaMask!");
  }
}

document.getElementById('connectWalletBtn').addEventListener('click', connectWallet);

// Language Toggle
let currentLanguage = 'en';
const englishWelcomeText = document.getElementById('welcomeText').innerHTML;
const hindiWelcomeText = `
  <b>рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдордПрд▓рдПрдо</b> рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдпрд╣ рдПрдХ рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрдд рдкреНрд░рдгрд╛рд▓реА рд╣реИ рдЬрд╣рд╛рдВ рдорд╛рд▓рд┐рдХ рдХрд╛ рдХреЛрдИ рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ рд╣реИ рдФрд░ рд╕рд┐рд░реНрдл рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рд╣реА рдорд╛рд▓рд┐рдХ рд╣реИрдВред<br><br>
  <b>рдпрд╣рд╛рдВ рдЖрдк рдЕрдкрдиреЗ рдкреИрд╕реЗ рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдмрдврд╝рд╛ рд╕рдХрддреЗ рд╣реИрдВ рдФрд░ рд╡рд┐рддреНрддреАрдп рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ!</b><br><br>
  рдпрд╣ рдкреНрд░рдгрд╛рд▓реА рдПрдХ <b>рд╕реНрдорд╛рд░реНрдЯ рдХреЙрдиреНрдЯреНрд░реИрдХреНрдЯ</b> рдкрд░ рдХрд╛рдо рдХрд░рддреА рд╣реИ рдЬреЛ рдкрд╛рд░рджрж░рзНрж╢реА рддрд░реАрдХреЗ рд╕реЗ рд╕реАрдзреЗ рдпреВрдЬрд░ рд╕реЗ рдпреВрдЬрд░ рднреБрдЧрддрд╛рди рдХрд░рддреА рд╣реИред рдПрдХ рдмрд╛рд░ рдкрдВрдЬреАрдХрд░рдг рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж, рдЖрдк рд╕реАрдзреЗ рдФрд░ рдЕрдкреНрд░рддреНрдпрдХреНрд╖ рд░реЗрдлрд░рд▓ рд╕реЗ рдХрдореАрд╢рди рдХрдорд╛рдирд╛ рд╢реБрд░реВ рдХрд░ рджреЗрдВрдЧреЗред<br><br>
  ЁЯМЯ <b>100% рд╕реБрд░рдХреНрд╖рд┐рдд</b> - рдХреЛрдИ рдПрдбрдорд┐рди рдирд┐рдпрдВрддреНрд░рдг рдирд╣реАрдВ, рдкреВрд░реА рддрд░рд╣ рд╡рд┐рдХреЗрдВрджреНрд░реАрдХреГрддред<br>
  ЁЯМЯ <b>рддреБрд░рдВрдд рднреБрдЧрддрд╛рди</b> - рдкреНрд░рддреАрдХреНрд╖рд╛ рдирд╣реАрдВ, рддреБрд░рдВрдд рдкреИрд╕рд╛ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред<br>
  ЁЯМЯ <b>рдЕрд╕реАрдорд┐рдд рдХрдорд╛рдИ</b> - рдЕрдкрдирд╛ рдиреЗрдЯрд╡рд░реНрдХ рдмрдврд╝рд╛рдПрдВ, рдЖрдп рдмрдврд╝рд╛рдПрдВред<br><br>
  <b>рдкрд╛рд░рджрд░реНрд╢рд┐рддрд╛:</b> рдлрдВрдб рдмрд┐рдирд╛ рдХрд┐рд╕реА рдмрд┐рдЪреМрд▓рд┐рдП рдХреЗ рд╕реАрдзреЗ рдпреВрдЬрд░-рдЯреВ-рдпреВрдЬрд░ рд╡рд┐рддрд░рд┐рдд рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред рдордиреА рдкреНрд▓рд╛рдВрдЯ рдПрдХ рджрд╛рдпрд┐рддреНрд╡-рдореБрдХреНрдд рдкрд░рд┐рдпреЛрдЬрдирд╛ рд╣реИ рдФрд░ рд╣рдореЗрд╢рд╛ рдЖрдкрдХреЗ рд╕рд╛рде рд░рд╣реЗрдЧреАред
`;

document.getElementById('languageBtn').addEventListener('click', () => {
  const isEnglish = document.getElementById('languageBtn').textContent.includes('English');
  if (isEnglish) {
    currentLanguage = 'hi';
    document.getElementById('welcomeText').innerHTML = hindiWelcomeText;
    document.getElementById('languageBtn').textContent = 'рд╣рд┐рдВрджреА / English';
  } else {
    currentLanguage = 'en';
    document.getElementById('welcomeText').innerHTML = englishWelcomeText;
    document.getElementById('languageBtn').textContent = 'English / рд╣рд┐рдВрджреА';
  }
  renderFAQ();
});

// FAQ Data & renderFAQ() omitted for brevity (same as before)

// Modal functions (openModal, closeModal, loadUplines, loadTeamLevels) omitted for brevity

// Distribute Funds: Activation process
function distributeFunds() {
  document.querySelector('.distribute-btn').style.display = 'none';
  const container = document.querySelector('.referral-actions-container');
  container.innerHTML = `
    <div class="congrats-msg">
      <h3>ЁЯОЙ Activation Successful!</h3>
      <div class="referral-actions">
        <button class="copy-btn" onclick="copyReferral()">Copy Referral Link</button>
        <button class="telegram-btn" onclick="window.open('https://t.me/+CeJkEHpoTWthZDVl')">Join Telegram</button>
      </div>
    </div>
  `;
  isActivated = true;
}

// Copy Referral Link
function copyReferral() {
  navigator.clipboard.writeText(\`https://moneyplant.com/ref?user=\${userAccount}\`);
  alert('Link Copied!');
}

// Replace Me functionality
function replaceUser() {
  if(isPartner){
    alert("Partner cannot use Replace Me function!");
    return;
  }
  const newAddress = document.getElementById('newAddress').value;
  if (newAddress) {
    currentSponsor = userAccount;
    userAccount = newAddress;
    document.getElementById('connectWalletBtn').textContent = \`Connected: \${newAddress.slice(0,6)}...\${newAddress.slice(-4)}\`;
    if(document.getElementById('directSponsor')){
      document.getElementById('directSponsor').value = currentSponsor;
    }
    alert(\`Replaced! New Link: https://moneyplant.com/ref?user=\${newAddress}\`);
    hideAllButtons();
    closeModal();
  } else {
    alert("Enter New Wallet!");
  }
}

// Quit Me functionality
function handleQuit() {
  if(isPartner){
    alert("Partner cannot use Quit Me function!");
    return;
  }
  if (confirm('You will get up to 0.27 USDT daily. Confirm?')) {
    alert('Refunds start tomorrow at 4 AM IST.');
    hideAllButtons();
  }
}

// Add Partner functionality
function addPartner() {
  if(!isActivated) {
    alert("Please activate your account by depositing 27 USDT first!");
    return;
  }
  if(isPartner) {
    alert("You are a Partner and cannot add a new Partner!");
    return;
  }
  if(partnerExists) {
    alert("A Partner has already been added. Remove the existing Partner to add a new one.");
    return;
  }
  const partnerAddr = document.getElementById('partnerAddress').value.trim();
  if (partnerAddr === "") {
    alert("Please enter Partner Wallet Address!");
    return;
  }
  partnerExists = true;
  partnerAddressStored = partnerAddr;
  partnerReferralDate = new Date();
  partnerReferralCount = 0;
  // UPDATED ALERT TEXT:
  alert(\`Successful!
Partner Added.
Your Partner Referral Link: https://moneyplant.com/ref?partner=\${partnerAddr}
Note: As an activated user, you can remove and add a new Partner if needed.\`);
  closeModal();
}

// Remove Partner functionality (same as before)
function removePartner() {
  if(!partnerExists) {
    alert("No Partner exists to remove!");
    return;
  }
  if(partnerReferralCount >= 2) {
    alert("This Partner has generated at least 2 referrals in the last 30 days and cannot be removed.");
    return;
  }
  if (confirm("Are you sure you want to remove the current Partner?")) {
    partnerExists = false;
    partnerAddressStored = "";
    partnerReferralCount = 0;
    partnerReferralDate = null;
    document.getElementById('partnerAddress').value = "";
    alert("Partner removed successfully. You can now add a new Partner by paying 3 USDT.");
  }
}

// Other helper functions omitted for brevity
